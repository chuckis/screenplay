# This is a basic workflow to help you get started with Actions

name: Releases

env:
  PLUGIN_NAME: logseq-nostr
  VERSION: ${{ github.ref }}

# Controls when the action will run.
on:  
  push:
    tags:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install, build
        run: |
          npm i -g pnpm
          pnpm install
          npm run build
          mkdir ${{ env.PLUGIN_NAME }}
          cp readme.md package.json nostr.svg logo.svg ${{ env.PLUGIN_NAME }}
          mv dist ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
          ls
          echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
        
      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          allowUpdates: true
          draft: false
          prerelease: false

      - name: Upload zip file
        id: upload_zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ env.VERSION }}.zip
          asset_content_type: application/zip

      - name: Upload package.json
        id: upload_metadata
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./package.json
          asset_name: package.json
          asset_content_type: application/json